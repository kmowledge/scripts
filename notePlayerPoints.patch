From 99bb7c2152ddff2cd670e7b5b99111df11ce39ff Mon Sep 17 00:00:00 2001
From: kmowledge <116028665+kmowledge@users.noreply.github.com>
Date: Thu, 7 Mar 2024 15:55:33 +0100
Subject: [PATCH 1/5] I try: dynamic cli update: \r, Fprint, \ASCII,
 bufio.Scanner

---
 wristWatch/drafts/dynamicUpdateTest.go | 33 ++++++++++++++++++++++++++
 1 file changed, 33 insertions(+)
 create mode 100644 wristWatch/drafts/dynamicUpdateTest.go

diff --git a/wristWatch/drafts/dynamicUpdateTest.go b/wristWatch/drafts/dynamicUpdateTest.go
new file mode 100644
index 0000000..951059d
--- /dev/null
+++ b/wristWatch/drafts/dynamicUpdateTest.go
@@ -0,0 +1,33 @@
+package main
+
+import (
+	"fmt"
+	"os"
+)
+
+func main() {
+	var i string
+	var j, k, l int
+	fmt.Println("send one of the letters: j k l")
+	fmt.Scanln(&i)
+
+	for {
+		switch i {
+		case "j":
+			j++
+			fmt.Printf("Jeremi: %v", j) //po value\033[2K
+			fmt.Scanln(&i)
+		case "k":
+			k++
+			fmt.Fprintf(os.Stdout, "Kacper %v\r", k) //input nadpisuje output, wysłanie inputa powoduje newline
+			fmt.Scanln(&i)
+		case "l":
+			l++
+			fmt.Printf("\rLinda: %v\r", l)
+			fmt.Scanln(&i)
+			// fmt.Fprintf(os.Stdout, "\r")
+		default:
+			fmt.Printf("\rwrong input")
+		}
+	}
+}
-- 
2.34.1


From 6358a3465c5efd8c1caaec3ed135f3ea3de1e5d4 Mon Sep 17 00:00:00 2001
From: kmowledge <116028665+kmowledge@users.noreply.github.com>
Date: Thu, 7 Mar 2024 22:04:09 +0100
Subject: [PATCH 2/5] I try: dynamic update CLI: concurrency, channel

---
 wristWatch/drafts/dynamicUpdateTest.go | 47 ++++++++++++++------------
 1 file changed, 26 insertions(+), 21 deletions(-)

diff --git a/wristWatch/drafts/dynamicUpdateTest.go b/wristWatch/drafts/dynamicUpdateTest.go
index 951059d..4e3a58c 100644
--- a/wristWatch/drafts/dynamicUpdateTest.go
+++ b/wristWatch/drafts/dynamicUpdateTest.go
@@ -5,29 +5,34 @@ import (
 	"os"
 )
 
+func switchPlayer(usrInput chan string, j, k, l *int) {
+	pl := <-usrInput
+	switch pl {
+	case "j":
+		*j++
+		fmt.Printf("Jeremi: %v", j) //po value\033[2K
+	case "k":
+		*k++
+		fmt.Fprintf(os.Stdout, "Kacper %v\r", k) //input nadpisuje output, wysłanie inputa powoduje newline
+	case "l":
+		*l++
+		fmt.Printf("\rLinda: %v\r", l)
+		// fmt.Fprintf(os.Stdout, "\r")
+	default:
+		fmt.Printf("\rwrong input")
+	}
+}
+
+var pl string
+var j, k, l int
+
 func main() {
 	var i string
-	var j, k, l int
 	fmt.Println("send one of the letters: j k l")
-	fmt.Scanln(&i)
-
-	for {
-		switch i {
-		case "j":
-			j++
-			fmt.Printf("Jeremi: %v", j) //po value\033[2K
-			fmt.Scanln(&i)
-		case "k":
-			k++
-			fmt.Fprintf(os.Stdout, "Kacper %v\r", k) //input nadpisuje output, wysłanie inputa powoduje newline
-			fmt.Scanln(&i)
-		case "l":
-			l++
-			fmt.Printf("\rLinda: %v\r", l)
-			fmt.Scanln(&i)
-			// fmt.Fprintf(os.Stdout, "\r")
-		default:
-			fmt.Printf("\rwrong input")
-		}
+	plCh := make(chan string)
+	for i != "exit" {
+		fmt.Scan(&i)
+		plCh <- i
+		go switchPlayer(plCh, &j, &k, &l)
 	}
 }
-- 
2.34.1


From b038fe3d6e12e791db8929d71948d7eb7975fe23 Mon Sep 17 00:00:00 2001
From: kmowledge <116028665+kmowledge@users.noreply.github.com>
Date: Thu, 28 Mar 2024 19:01:57 +0100
Subject: [PATCH 3/5] fixed deadlock -added loop in receiving func; added ANSI
 escape

---
 wristWatch/drafts/dynamicUpdateTest.go | 38 +++++++++++++++-----------
 1 file changed, 22 insertions(+), 16 deletions(-)

diff --git a/wristWatch/drafts/dynamicUpdateTest.go b/wristWatch/drafts/dynamicUpdateTest.go
index 4e3a58c..d108a29 100644
--- a/wristWatch/drafts/dynamicUpdateTest.go
+++ b/wristWatch/drafts/dynamicUpdateTest.go
@@ -5,21 +5,23 @@ import (
 	"os"
 )
 
-func switchPlayer(usrInput chan string, j, k, l *int) {
-	pl := <-usrInput
-	switch pl {
-	case "j":
-		*j++
-		fmt.Printf("Jeremi: %v", j) //po value\033[2K
-	case "k":
-		*k++
-		fmt.Fprintf(os.Stdout, "Kacper %v\r", k) //input nadpisuje output, wysłanie inputa powoduje newline
-	case "l":
-		*l++
-		fmt.Printf("\rLinda: %v\r", l)
-		// fmt.Fprintf(os.Stdout, "\r")
-	default:
-		fmt.Printf("\rwrong input")
+func switchPlayer(plCh <-chan string, j, k, l *int) {
+	for {
+		pl := <-plCh
+		switch pl {
+		case "j":
+			*j++
+			fmt.Printf("\033[A\033[2K Jeremi: %v\033[B", *j) //po value\033[2K
+		case "k":
+			*k++
+			fmt.Fprintf(os.Stdout, "Kacper %v\r", *k) //input nadpisuje output, wysłanie inputa powoduje newline
+		case "l":
+			*l++
+			fmt.Printf("\rLinda: %v\r", *l)
+			// fmt.Fprintf(os.Stdout, "\r")
+		default:
+			fmt.Printf("\rwrong input")
+		}
 	}
 }
 
@@ -30,9 +32,13 @@ func main() {
 	var i string
 	fmt.Println("send one of the letters: j k l")
 	plCh := make(chan string)
+
+	go switchPlayer(plCh, &j, &k, &l)
+
 	for i != "exit" {
 		fmt.Scan(&i)
 		plCh <- i
-		go switchPlayer(plCh, &j, &k, &l)
 	}
 }
+
+// 			fmt.Printf("Jeremi: %v\nKacper: %v\nLinda: %v\n", *j, *k, *l)
-- 
2.34.1


From 88eec9b920e79085eefb217749a40cb24ee537b9 Mon Sep 17 00:00:00 2001
From: kmowledge <116028665+kmowledge@users.noreply.github.com>
Date: Thu, 28 Mar 2024 19:18:31 +0100
Subject: [PATCH 4/5] Added instructions and polished

---
 wristWatch/drafts/dynamicUpdateTest.go | 15 +++++++++------
 1 file changed, 9 insertions(+), 6 deletions(-)

diff --git a/wristWatch/drafts/dynamicUpdateTest.go b/wristWatch/drafts/dynamicUpdateTest.go
index d108a29..959f184 100644
--- a/wristWatch/drafts/dynamicUpdateTest.go
+++ b/wristWatch/drafts/dynamicUpdateTest.go
@@ -11,14 +11,17 @@ func switchPlayer(plCh <-chan string, j, k, l *int) {
 		switch pl {
 		case "j":
 			*j++
-			fmt.Printf("\033[A\033[2K Jeremi: %v\033[B", *j) //po value\033[2K
+			fmt.Printf("\033[A\033[2KJeremi: %v", *j)
 		case "k":
 			*k++
-			fmt.Fprintf(os.Stdout, "Kacper %v\r", *k) //input nadpisuje output, wysłanie inputa powoduje newline
+			fmt.Fprintf(os.Stdout, "\033[A\033[2KKacper: %v", *k)
 		case "l":
 			*l++
-			fmt.Printf("\rLinda: %v\r", *l)
+			fmt.Printf("\033[A\033[2KLinda: %v", *l)
 			// fmt.Fprintf(os.Stdout, "\r")
+		case "points":
+			fmt.Printf("\033[A\033[2K----------\nJeremi: %v\nKacper: %v\nLinda: %v\n----------\n", *j, *k, *l)
+
 		default:
 			fmt.Printf("\rwrong input")
 		}
@@ -30,7 +33,9 @@ var j, k, l int
 
 func main() {
 	var i string
-	fmt.Println("send one of the letters: j k l")
+	fmt.Println("To give a point to Jeremi, Kacper or Linda, send: j / k / l" +
+		"\nTo see the current state of points, send: points" +
+		"\nTo quit the program, send: exit")
 	plCh := make(chan string)
 
 	go switchPlayer(plCh, &j, &k, &l)
@@ -40,5 +45,3 @@ func main() {
 		plCh <- i
 	}
 }
-
-// 			fmt.Printf("Jeremi: %v\nKacper: %v\nLinda: %v\n", *j, *k, *l)
-- 
2.34.1


From 0254ac1c00c4c214cf889f6fb167101ef83654b4 Mon Sep 17 00:00:00 2001
From: kmowledge <116028665+kmowledge@users.noreply.github.com>
Date: Thu, 28 Mar 2024 19:21:57 +0100
Subject: [PATCH 5/5] Added instructions and polished

---
 wristWatch/drafts/dynamicUpdateTest.go | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/wristWatch/drafts/dynamicUpdateTest.go b/wristWatch/drafts/dynamicUpdateTest.go
index 959f184..d0901ac 100644
--- a/wristWatch/drafts/dynamicUpdateTest.go
+++ b/wristWatch/drafts/dynamicUpdateTest.go
@@ -20,7 +20,11 @@ func switchPlayer(plCh <-chan string, j, k, l *int) {
 			fmt.Printf("\033[A\033[2KLinda: %v", *l)
 			// fmt.Fprintf(os.Stdout, "\r")
 		case "points":
-			fmt.Printf("\033[A\033[2K----------\nJeremi: %v\nKacper: %v\nLinda: %v\n----------\n", *j, *k, *l)
+			fmt.Printf("\033[A\033[2K----------\n"+
+				"Jeremi: %v"+
+				"\nKacper: %v"+
+				"\nLinda: %v"+
+				"\n----------\n", *j, *k, *l)
 
 		default:
 			fmt.Printf("\rwrong input")
-- 
2.34.1

